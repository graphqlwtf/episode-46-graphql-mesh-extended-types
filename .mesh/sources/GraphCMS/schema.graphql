schema {
  query: Query
  mutation: Mutation
}

directive @defaultOverride(
  """
  List of arguments for which the defaults should be overridden. Currently only supports 'stage' and 'locales'.
  """
  args: [String!]!
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @mark(
  """Marks if field is localized"""
  localized: Boolean
  """Marks if value is default"""
  default: Boolean
  """Marks the pageInfo"""
  pageInfo: Boolean
  """Marks an aggregate type"""
  aggregate: Boolean
  """Marks a countable type"""
  countable: Boolean
  """Marks an edge type"""
  edge: Boolean
  """Marks a locale enum"""
  locale: Boolean
  """Marks asset url handler"""
  url: Boolean
  """Marks type of mutation kind"""
  mutationKind: GCMS__MutationKind
  """Marks kind of mutation input field"""
  mutationInputFieldKind: GCMS__MutationInputFieldKind
  """Marks filter and links to parent type"""
  filter: String
  """Marks filter kind"""
  filterKind: GCMS__FilterKind
  """Marks if corresponding field is list"""
  filterIsList: Boolean
  """Marks order by"""
  order: Boolean
  """Marks order direction"""
  orderDirection: GCMS__OrderDirection
  """Link to the Main type of the connection"""
  connection: String
  """Marks localizations field"""
  localizations: Boolean
  """Marks versions field on model"""
  modelVersions: Boolean
  """Marks document version field on Query"""
  documentVersion: Boolean
  """Marks stages field"""
  stages: Boolean
  """Specifies system createdAt field"""
  createdAtField: String
  """Specifies system updatedAt field"""
  updatedAtField: String
  """Specifies relation input kind"""
  relationInputKind: GCMS__RelationInputKind
  """
  Specifies relation kind (e.g. union relation or regular field relation)
  """
  relationKind: GCMS__RelationKind
  """Specifies relation input cardinality"""
  relationInputCardinality: GCMS__RelationInputCardinality
  """Specifies relation input cardinality of reverse side"""
  reverseRelationInputCardinality: GCMS__RelationInputCardinality
  """Specifies model create input type"""
  createInputType: String
  """Specifies model create localization type"""
  createLocalizationInputType: String
  """Specifies GraphCMS field type"""
  fieldType: String
  """Specifies WhereUniqueInput type name"""
  whereUniqueInput: String
  """Specifies ConnectInput type name"""
  connectInput: String
  """Specifies whether type is connect input"""
  isConnectInput: Boolean
  """
  Specifies relation input to be for abstract member type, not known master / origin side
  """
  isMemberInput: Boolean
  """Specifies union type name"""
  unionType: String
  """Specifies model a type is part of"""
  model: String
  """Specifies mode of system DateTime fields"""
  systemDateTimeFieldVariation: GCMS__SystemDateTimeFieldVariation
  """
  If versioned, documents of this model will be able to hold this amount of versions per stage
  """
  versionRetentionCount: Int
  """If versioned, on publishing versions older than x days will be dropped"""
  versionRetentionPeriod: Int
  """Adds field validations"""
  validations: String
  """The model's storage ID"""
  storageId: String
  """Marks richText field return type"""
  isRichTextType: Boolean
  """Marks list richText field return type"""
  isListRichText: Boolean
  """The name of the associated RichText type"""
  richTextType: String
  """Marks relation fields that do not have a reverse side counterpart"""
  isUnidirectional: Boolean
  """
  Specifies if the filter's value can be replaced by the current user's id
  """
  replaceableWithUserId: Boolean
  """marks if field is required (non-null)"""
  isRequired: Boolean
  """marks if type is a component"""
  isComponent: Boolean
  """marks if a input type allows to set position in addition to data"""
  isPositionInput: Boolean
  """main side details of union field on component"""
  unionFieldDetailsForVirtualMemberSide: String
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | ENUM | INPUT_FIELD_DEFINITION | INPUT_OBJECT | ARGUMENT_DEFINITION | UNION

directive @permission(
  """Policy resource names."""
  resources: [String!]
  """Policy action names."""
  actions: [String!]
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @psql(
  """postgres table name"""
  table: String
  """postgres localization table name"""
  localizationTable: String
  """postgres column name"""
  column: String
  """hardcoded postgres id value for enums"""
  id: String
  """postgres join on name"""
  join: String
  """Specifies column for system id field"""
  idColumn: String
  """Specifies column for native sorting for relational fields"""
  prio: String
  """Specifies columns for union member fields"""
  memberColumns: [String!]
  """Specifies system updatedAt column"""
  updatedAtColumn: String
  """
  Specifies the value used to fill the parent_field column that's used to identify the parent field a component got created for
  """
  componentParentFieldValue: String
  """postgres table name for the versions"""
  versionTable: String
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION | ENUM | INPUT_OBJECT | ARGUMENT_DEFINITION

directive @remote(
  """url to fetch the remote content from"""
  url: String!
  """HTTP method used to fetch the remote content from"""
  method: String!
  """Which type of api should be called. Currently supported: GRAPHQL, REST"""
  sourceType: String!
  """optional headers that will be sent in the remote call"""
  headers: GCMS_Json
  """
  list of field storage ids that will be fetched in any case from the content db to make them available for {{doc.*}} template placeholders in headers, parameters etc for the remote call
  """
  docPlaceholderFields: [String!]!
  """optional ttl value used for caching"""
  ttlInSeconds: Int
  """
  Flag whether to pass headers that are sent by the client to the remote source or not
  """
  forwardClientHeaders: Boolean!
  """
  GraphQL entry point query that will be used to fetch the remote type in case of a remote GraphQL PI
  """
  gqlQuery: String
  """Operation name of the gqlQuery in case of a remote GraphQL API"""
  gqlOperationName: String
  """
  JSON path pointing to the entry point type that is defined by the GraphQL Query.
  """
  gqlEntryPointPath: [String!]
  """Flag whether debug options are enabled on a given field or not"""
  debugEnabled: Boolean!
) on FIELD_DEFINITION

type GCMS_Aggregate {
  count: Int!
}

"""Asset system model"""
type GCMS_Asset implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en, de]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [GCMS_Asset!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_Asset!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """The file handle"""
  handle: String!
  """The file name"""
  fileName: String!
  """The height of the file"""
  height: Float
  """The file width"""
  width: Float
  """The file size"""
  size: Float
  """The mime type of the file"""
  mimeType: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  productImage(
    where: GCMS_ProductWhereInput
    orderBy: GCMS_ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productImage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_Product!]!
  scheduledIn(
    where: GCMS_ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: GCMS_Stage
  ): [GCMS_Version!]!
  """Get the url for the asset with provided transformations applied."""
  url(transformation: GCMS_AssetTransformationInput): String!
}

input GCMS_AssetConnectInput {
  """Document to connect"""
  where: GCMS_AssetWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_AssetConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_AssetEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_AssetCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  productImage: GCMS_ProductCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: GCMS_AssetCreateLocalizationsInput
}

input GCMS_AssetCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input GCMS_AssetCreateLocalizationInput {
  """Localization input"""
  data: GCMS_AssetCreateLocalizationDataInput!
  locale: Locale!
}

input GCMS_AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [GCMS_AssetCreateLocalizationInput!]
}

input GCMS_AssetCreateManyInlineInput {
  """Create and connect multiple existing Asset documents"""
  create: [GCMS_AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [GCMS_AssetWhereUniqueInput!]
}

input GCMS_AssetCreateOneInlineInput {
  """Create and connect one Asset document"""
  create: GCMS_AssetCreateInput
  """Connect one existing Asset document"""
  connect: GCMS_AssetWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_AssetEdge {
  """The item at the end of the edge."""
  node: GCMS_Asset!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_AssetManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  productImage_every: GCMS_ProductWhereInput
  productImage_some: GCMS_ProductWhereInput
  productImage_none: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

enum GCMS_AssetOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
}

"""Transformations for Assets"""
input GCMS_AssetTransformationInput {
  image: GCMS_ImageTransformationInput
  document: GCMS_DocumentTransformationInput
  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input GCMS_AssetUpdateInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  productImage: GCMS_ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: GCMS_AssetUpdateLocalizationsInput
}

input GCMS_AssetUpdateLocalizationDataInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input GCMS_AssetUpdateLocalizationInput {
  data: GCMS_AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input GCMS_AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [GCMS_AssetCreateLocalizationInput!]
  """Localizations to update"""
  update: [GCMS_AssetUpdateLocalizationInput!]
  upsert: [GCMS_AssetUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input GCMS_AssetUpdateManyInlineInput {
  """Create and connect multiple Asset documents"""
  create: [GCMS_AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [GCMS_AssetConnectInput!]
  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [GCMS_AssetWhereUniqueInput!]
  """Update multiple Asset documents"""
  update: [GCMS_AssetUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Asset documents"""
  upsert: [GCMS_AssetUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Asset documents"""
  disconnect: [GCMS_AssetWhereUniqueInput!]
  """Delete multiple Asset documents"""
  delete: [GCMS_AssetWhereUniqueInput!]
}

input GCMS_AssetUpdateManyInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  """Optional updates to localizations"""
  localizations: GCMS_AssetUpdateManyLocalizationsInput
}

input GCMS_AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input GCMS_AssetUpdateManyLocalizationInput {
  data: GCMS_AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input GCMS_AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [GCMS_AssetUpdateManyLocalizationInput!]
}

input GCMS_AssetUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_AssetWhereInput!
  """Update many input"""
  data: GCMS_AssetUpdateManyInput!
}

input GCMS_AssetUpdateOneInlineInput {
  """Create and connect one Asset document"""
  create: GCMS_AssetCreateInput
  """Update single Asset document"""
  update: GCMS_AssetUpdateWithNestedWhereUniqueInput
  """Upsert single Asset document"""
  upsert: GCMS_AssetUpsertWithNestedWhereUniqueInput
  """Connect existing Asset document"""
  connect: GCMS_AssetWhereUniqueInput
  """Disconnect currently connected Asset document"""
  disconnect: Boolean
  """Delete currently connected Asset document"""
  delete: Boolean
}

input GCMS_AssetUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_AssetWhereUniqueInput!
  """Document to update"""
  data: GCMS_AssetUpdateInput!
}

input GCMS_AssetUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_AssetCreateInput!
  """Update document if it exists"""
  update: GCMS_AssetUpdateInput!
}

input GCMS_AssetUpsertLocalizationInput {
  update: GCMS_AssetUpdateLocalizationDataInput!
  create: GCMS_AssetCreateLocalizationDataInput!
  locale: Locale!
}

input GCMS_AssetUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_AssetWhereUniqueInput!
  """Upsert data"""
  data: GCMS_AssetUpsertInput!
}

"""Identifies documents"""
input GCMS_AssetWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  handle: String
  """All values that are not equal to given value."""
  handle_not: String
  """All values that are contained in given list."""
  handle_in: [String!]
  """All values that are not contained in given list."""
  handle_not_in: [String!]
  """All values containing the given string."""
  handle_contains: String
  """All values not containing the given string."""
  handle_not_contains: String
  """All values starting with the given string."""
  handle_starts_with: String
  """All values not starting with the given string."""
  handle_not_starts_with: String
  """All values ending with the given string."""
  handle_ends_with: String
  """All values not ending with the given string"""
  handle_not_ends_with: String
  fileName: String
  """All values that are not equal to given value."""
  fileName_not: String
  """All values that are contained in given list."""
  fileName_in: [String!]
  """All values that are not contained in given list."""
  fileName_not_in: [String!]
  """All values containing the given string."""
  fileName_contains: String
  """All values not containing the given string."""
  fileName_not_contains: String
  """All values starting with the given string."""
  fileName_starts_with: String
  """All values not starting with the given string."""
  fileName_not_starts_with: String
  """All values ending with the given string."""
  fileName_ends_with: String
  """All values not ending with the given string"""
  fileName_not_ends_with: String
  height: Float
  """All values that are not equal to given value."""
  height_not: Float
  """All values that are contained in given list."""
  height_in: [Float!]
  """All values that are not contained in given list."""
  height_not_in: [Float!]
  """All values less than the given value."""
  height_lt: Float
  """All values less than or equal the given value."""
  height_lte: Float
  """All values greater than the given value."""
  height_gt: Float
  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float
  """All values that are not equal to given value."""
  width_not: Float
  """All values that are contained in given list."""
  width_in: [Float!]
  """All values that are not contained in given list."""
  width_not_in: [Float!]
  """All values less than the given value."""
  width_lt: Float
  """All values less than or equal the given value."""
  width_lte: Float
  """All values greater than the given value."""
  width_gt: Float
  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float
  """All values that are not equal to given value."""
  size_not: Float
  """All values that are contained in given list."""
  size_in: [Float!]
  """All values that are not contained in given list."""
  size_not_in: [Float!]
  """All values less than the given value."""
  size_lt: Float
  """All values less than or equal the given value."""
  size_lte: Float
  """All values greater than the given value."""
  size_gt: Float
  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String
  """All values that are not equal to given value."""
  mimeType_not: String
  """All values that are contained in given list."""
  mimeType_in: [String!]
  """All values that are not contained in given list."""
  mimeType_not_in: [String!]
  """All values containing the given string."""
  mimeType_contains: String
  """All values not containing the given string."""
  mimeType_not_contains: String
  """All values starting with the given string."""
  mimeType_starts_with: String
  """All values not starting with the given string."""
  mimeType_not_starts_with: String
  """All values ending with the given string."""
  mimeType_ends_with: String
  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  productImage_every: GCMS_ProductWhereInput
  productImage_some: GCMS_ProductWhereInput
  productImage_none: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

"""References Asset record uniquely"""
input GCMS_AssetWhereUniqueInput {
  id: ID
}

type GCMS_BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type GCMS_Color {
  hex: GCMS_Hex!
  rgba: RGBA!
  css: String!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input GCMS_ColorInput {
  hex: GCMS_Hex
  rgba: GCMS_RGBAInput
}

input GCMS_ConnectPositionInput {
  """Connect document after specified document"""
  after: ID
  """Connect document before specified document"""
  before: ID
  """Connect document at first position"""
  start: Boolean
  """Connect document at last position"""
  end: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum GCMS_DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}

input GCMS_DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: GCMS_DocumentFileTypes
}

"""Transformations for Documents"""
input GCMS_DocumentTransformationInput {
  """Changes the output for the file."""
  output: GCMS_DocumentOutputInput
}

type GCMS_DocumentVersion {
  id: ID!
  stage: GCMS_Stage!
  revision: Int!
  createdAt: DateTime!
  data: GCMS_Json
}

scalar GCMS_Hex

enum GCMS_ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip
  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop
  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max
}

input GCMS_ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int
  """The default value for the fit parameter is fit:clip."""
  fit: GCMS_ImageFit
}

"""Transformations for Images"""
input GCMS_ImageTransformationInput {
  """Resizes the image"""
  resize: GCMS_ImageResizeInput
}

"""Raw JSON value"""
scalar GCMS_Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
  de
}

"""Representing a geolocation point with latitude and longitude"""
type GCMS_Location {
  latitude: Float!
  longitude: Float!
  distance(from: GCMS_LocationInput!): Float!
}

"""Input for a geolocation point with latitude and longitude"""
input GCMS_LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Create one product"""
  GCMS_createProduct(data: GCMS_ProductCreateInput!): GCMS_Product
  """Update one product"""
  GCMS_updateProduct(where: GCMS_ProductWhereUniqueInput!, data: GCMS_ProductUpdateInput!): GCMS_Product
  """
  Delete one product from _all_ existing stages. Returns deleted document.
  """
  GCMS_deleteProduct(
    """Document to delete"""
    where: GCMS_ProductWhereUniqueInput!
  ): GCMS_Product
  """Upsert one product"""
  GCMS_upsertProduct(where: GCMS_ProductWhereUniqueInput!, upsert: GCMS_ProductUpsertInput!): GCMS_Product
  """Publish one product"""
  GCMS_publishProduct(
    """Document to publish"""
    where: GCMS_ProductWhereUniqueInput!
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Product
  """
  Unpublish one product from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_unpublishProduct(
    """Document to unpublish"""
    where: GCMS_ProductWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): GCMS_Product
  """Update many Product documents"""
  GCMS_updateManyProductsConnection(
    """Documents to apply update on"""
    where: GCMS_ProductManyWhereInput
    """Updates to document content"""
    data: GCMS_ProductUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ProductConnection!
  """Delete many Product documents, return deleted documents"""
  GCMS_deleteManyProductsConnection(
    """Documents to delete"""
    where: GCMS_ProductManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ProductConnection!
  """Publish many Product documents"""
  GCMS_publishManyProductsConnection(
    """Identifies documents in each stage to be published"""
    where: GCMS_ProductManyWhereInput
    """Stage to find matching documents in"""
    from: GCMS_Stage = DRAFT
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): GCMS_ProductConnection!
  """
  Find many Product documents that match criteria in specified stage and unpublish from target stages
  """
  GCMS_unpublishManyProductsConnection(
    """Identifies documents in draft stage"""
    where: GCMS_ProductManyWhereInput
    """Stage to find matching documents in"""
    stage: GCMS_Stage = DRAFT
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): GCMS_ProductConnection!
  """Update many products"""
  GCMS_updateManyProducts(
    """Documents to apply update on"""
    where: GCMS_ProductManyWhereInput
    """Updates to document content"""
    data: GCMS_ProductUpdateManyInput!
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyProductsConnection)")
  """Delete many Product documents"""
  GCMS_deleteManyProducts(
    """Documents to delete"""
    where: GCMS_ProductManyWhereInput
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyProductsConnection)")
  """Publish many Product documents"""
  GCMS_publishManyProducts(
    """Identifies documents in each stage to be published"""
    where: GCMS_ProductManyWhereInput
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyProductsConnection)")
  """Unpublish many Product documents"""
  GCMS_unpublishManyProducts(
    """Identifies documents in each stage"""
    where: GCMS_ProductManyWhereInput
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyProductsConnection)")
  """Schedule to publish one product"""
  GCMS_schedulePublishProduct(
    """Document to publish"""
    where: GCMS_ProductWhereUniqueInput!
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Product
  """
  Unpublish one product from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_scheduleUnpublishProduct(
    """Document to unpublish"""
    where: GCMS_ProductWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): GCMS_Product
  """Create one review"""
  GCMS_createReview(data: GCMS_ReviewCreateInput!): GCMS_Review
  """Update one review"""
  GCMS_updateReview(where: GCMS_ReviewWhereUniqueInput!, data: GCMS_ReviewUpdateInput!): GCMS_Review
  """
  Delete one review from _all_ existing stages. Returns deleted document.
  """
  GCMS_deleteReview(
    """Document to delete"""
    where: GCMS_ReviewWhereUniqueInput!
  ): GCMS_Review
  """Upsert one review"""
  GCMS_upsertReview(where: GCMS_ReviewWhereUniqueInput!, upsert: GCMS_ReviewUpsertInput!): GCMS_Review
  """Publish one review"""
  GCMS_publishReview(
    """Document to publish"""
    where: GCMS_ReviewWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Review
  """
  Unpublish one review from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_unpublishReview(
    """Document to unpublish"""
    where: GCMS_ReviewWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Review
  """Update many Review documents"""
  GCMS_updateManyReviewsConnection(
    """Documents to apply update on"""
    where: GCMS_ReviewManyWhereInput
    """Updates to document content"""
    data: GCMS_ReviewUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ReviewConnection!
  """Delete many Review documents, return deleted documents"""
  GCMS_deleteManyReviewsConnection(
    """Documents to delete"""
    where: GCMS_ReviewManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ReviewConnection!
  """Publish many Review documents"""
  GCMS_publishManyReviewsConnection(
    """Identifies documents in each stage to be published"""
    where: GCMS_ReviewManyWhereInput
    """Stage to find matching documents in"""
    from: GCMS_Stage = DRAFT
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ReviewConnection!
  """
  Find many Review documents that match criteria in specified stage and unpublish from target stages
  """
  GCMS_unpublishManyReviewsConnection(
    """Identifies documents in draft stage"""
    where: GCMS_ReviewManyWhereInput
    """Stage to find matching documents in"""
    stage: GCMS_Stage = DRAFT
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_ReviewConnection!
  """Update many reviews"""
  GCMS_updateManyReviews(
    """Documents to apply update on"""
    where: GCMS_ReviewManyWhereInput
    """Updates to document content"""
    data: GCMS_ReviewUpdateManyInput!
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyReviewsConnection)")
  """Delete many Review documents"""
  GCMS_deleteManyReviews(
    """Documents to delete"""
    where: GCMS_ReviewManyWhereInput
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyReviewsConnection)")
  """Publish many Review documents"""
  GCMS_publishManyReviews(
    """Identifies documents in each stage to be published"""
    where: GCMS_ReviewManyWhereInput
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyReviewsConnection)")
  """Unpublish many Review documents"""
  GCMS_unpublishManyReviews(
    """Identifies documents in each stage"""
    where: GCMS_ReviewManyWhereInput
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyReviewsConnection)")
  """Schedule to publish one review"""
  GCMS_schedulePublishReview(
    """Document to publish"""
    where: GCMS_ReviewWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Review
  """
  Unpublish one review from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_scheduleUnpublishReview(
    """Document to unpublish"""
    where: GCMS_ReviewWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Review
  """Create one asset"""
  GCMS_createAsset(data: GCMS_AssetCreateInput!): GCMS_Asset @deprecated(reason: "Asset mutations will be overhauled soon")
  """Update one asset"""
  GCMS_updateAsset(where: GCMS_AssetWhereUniqueInput!, data: GCMS_AssetUpdateInput!): GCMS_Asset
  """Delete one asset from _all_ existing stages. Returns deleted document."""
  GCMS_deleteAsset(
    """Document to delete"""
    where: GCMS_AssetWhereUniqueInput!
  ): GCMS_Asset
  """Upsert one asset"""
  GCMS_upsertAsset(where: GCMS_AssetWhereUniqueInput!, upsert: GCMS_AssetUpsertInput!): GCMS_Asset
  """Publish one asset"""
  GCMS_publishAsset(
    """Document to publish"""
    where: GCMS_AssetWhereUniqueInput!
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Asset
  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_unpublishAsset(
    """Document to unpublish"""
    where: GCMS_AssetWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): GCMS_Asset
  """Update many Asset documents"""
  GCMS_updateManyAssetsConnection(
    """Documents to apply update on"""
    where: GCMS_AssetManyWhereInput
    """Updates to document content"""
    data: GCMS_AssetUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_AssetConnection!
  """Delete many Asset documents, return deleted documents"""
  GCMS_deleteManyAssetsConnection(
    """Documents to delete"""
    where: GCMS_AssetManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_AssetConnection!
  """Publish many Asset documents"""
  GCMS_publishManyAssetsConnection(
    """Identifies documents in each stage to be published"""
    where: GCMS_AssetManyWhereInput
    """Stage to find matching documents in"""
    from: GCMS_Stage = DRAFT
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): GCMS_AssetConnection!
  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  GCMS_unpublishManyAssetsConnection(
    """Identifies documents in draft stage"""
    where: GCMS_AssetManyWhereInput
    """Stage to find matching documents in"""
    stage: GCMS_Stage = DRAFT
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): GCMS_AssetConnection!
  """Update many assets"""
  GCMS_updateManyAssets(
    """Documents to apply update on"""
    where: GCMS_AssetManyWhereInput
    """Updates to document content"""
    data: GCMS_AssetUpdateManyInput!
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")
  """Delete many Asset documents"""
  GCMS_deleteManyAssets(
    """Documents to delete"""
    where: GCMS_AssetManyWhereInput
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")
  """Publish many Asset documents"""
  GCMS_publishManyAssets(
    """Identifies documents in each stage to be published"""
    where: GCMS_AssetManyWhereInput
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """Document localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")
  """Unpublish many Asset documents"""
  GCMS_unpublishManyAssets(
    """Identifies documents in each stage"""
    where: GCMS_AssetManyWhereInput
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """Locales to unpublish"""
    locales: [Locale!]
    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")
  """Schedule to publish one asset"""
  GCMS_schedulePublishAsset(
    """Document to publish"""
    where: GCMS_AssetWhereUniqueInput!
    """Optional localizations to publish"""
    locales: [Locale!]
    """Whether to publish the base document"""
    publishBase: Boolean = true
    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Asset
  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_scheduleUnpublishAsset(
    """Document to unpublish"""
    where: GCMS_AssetWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): GCMS_Asset
  """Create one vote"""
  GCMS_createVote(data: GCMS_VoteCreateInput!): GCMS_Vote
  """Update one vote"""
  GCMS_updateVote(where: GCMS_VoteWhereUniqueInput!, data: GCMS_VoteUpdateInput!): GCMS_Vote
  """Delete one vote from _all_ existing stages. Returns deleted document."""
  GCMS_deleteVote(
    """Document to delete"""
    where: GCMS_VoteWhereUniqueInput!
  ): GCMS_Vote
  """Upsert one vote"""
  GCMS_upsertVote(where: GCMS_VoteWhereUniqueInput!, upsert: GCMS_VoteUpsertInput!): GCMS_Vote
  """Publish one vote"""
  GCMS_publishVote(
    """Document to publish"""
    where: GCMS_VoteWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Vote
  """
  Unpublish one vote from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_unpublishVote(
    """Document to unpublish"""
    where: GCMS_VoteWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_Vote
  """Update many Vote documents"""
  GCMS_updateManyVotesConnection(
    """Documents to apply update on"""
    where: GCMS_VoteManyWhereInput
    """Updates to document content"""
    data: GCMS_VoteUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_VoteConnection!
  """Delete many Vote documents, return deleted documents"""
  GCMS_deleteManyVotesConnection(
    """Documents to delete"""
    where: GCMS_VoteManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_VoteConnection!
  """Publish many Vote documents"""
  GCMS_publishManyVotesConnection(
    """Identifies documents in each stage to be published"""
    where: GCMS_VoteManyWhereInput
    """Stage to find matching documents in"""
    from: GCMS_Stage = DRAFT
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_VoteConnection!
  """
  Find many Vote documents that match criteria in specified stage and unpublish from target stages
  """
  GCMS_unpublishManyVotesConnection(
    """Identifies documents in draft stage"""
    where: GCMS_VoteManyWhereInput
    """Stage to find matching documents in"""
    stage: GCMS_Stage = DRAFT
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_VoteConnection!
  """Update many votes"""
  GCMS_updateManyVotes(
    """Documents to apply update on"""
    where: GCMS_VoteManyWhereInput
    """Updates to document content"""
    data: GCMS_VoteUpdateManyInput!
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyVotesConnection)")
  """Delete many Vote documents"""
  GCMS_deleteManyVotes(
    """Documents to delete"""
    where: GCMS_VoteManyWhereInput
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyVotesConnection)")
  """Publish many Vote documents"""
  GCMS_publishManyVotes(
    """Identifies documents in each stage to be published"""
    where: GCMS_VoteManyWhereInput
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyVotesConnection)")
  """Unpublish many Vote documents"""
  GCMS_unpublishManyVotes(
    """Identifies documents in each stage"""
    where: GCMS_VoteManyWhereInput
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyVotesConnection)")
  """Schedule to publish one vote"""
  GCMS_schedulePublishVote(
    """Document to publish"""
    where: GCMS_VoteWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Vote
  """
  Unpublish one vote from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_scheduleUnpublishVote(
    """Document to unpublish"""
    where: GCMS_VoteWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_Vote
  """Delete and return scheduled operation"""
  GCMS_deleteScheduledOperation(
    """Document to delete"""
    where: GCMS_ScheduledOperationWhereUniqueInput!
  ): GCMS_ScheduledOperation
  """Create one scheduledRelease"""
  GCMS_createScheduledRelease(data: GCMS_ScheduledReleaseCreateInput!): GCMS_ScheduledRelease
  """Update one scheduledRelease"""
  GCMS_updateScheduledRelease(where: GCMS_ScheduledReleaseWhereUniqueInput!, data: GCMS_ScheduledReleaseUpdateInput!): GCMS_ScheduledRelease
  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  GCMS_deleteScheduledRelease(
    """Document to delete"""
    where: GCMS_ScheduledReleaseWhereUniqueInput!
  ): GCMS_ScheduledRelease
  """Create one nextAuthUser"""
  GCMS_createNextAuthUser(data: GCMS_NextAuthUserCreateInput!): GCMS_NextAuthUser
  """Update one nextAuthUser"""
  GCMS_updateNextAuthUser(where: GCMS_NextAuthUserWhereUniqueInput!, data: GCMS_NextAuthUserUpdateInput!): GCMS_NextAuthUser
  """
  Delete one nextAuthUser from _all_ existing stages. Returns deleted document.
  """
  GCMS_deleteNextAuthUser(
    """Document to delete"""
    where: GCMS_NextAuthUserWhereUniqueInput!
  ): GCMS_NextAuthUser
  """Upsert one nextAuthUser"""
  GCMS_upsertNextAuthUser(where: GCMS_NextAuthUserWhereUniqueInput!, upsert: GCMS_NextAuthUserUpsertInput!): GCMS_NextAuthUser
  """Publish one nextAuthUser"""
  GCMS_publishNextAuthUser(
    """Document to publish"""
    where: GCMS_NextAuthUserWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_NextAuthUser
  """
  Unpublish one nextAuthUser from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_unpublishNextAuthUser(
    """Document to unpublish"""
    where: GCMS_NextAuthUserWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_NextAuthUser
  """Update many NextAuthUser documents"""
  GCMS_updateManyNextAuthUsersConnection(
    """Documents to apply update on"""
    where: GCMS_NextAuthUserManyWhereInput
    """Updates to document content"""
    data: GCMS_NextAuthUserUpdateManyInput!
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_NextAuthUserConnection!
  """Delete many NextAuthUser documents, return deleted documents"""
  GCMS_deleteManyNextAuthUsersConnection(
    """Documents to delete"""
    where: GCMS_NextAuthUserManyWhereInput
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_NextAuthUserConnection!
  """Publish many NextAuthUser documents"""
  GCMS_publishManyNextAuthUsersConnection(
    """Identifies documents in each stage to be published"""
    where: GCMS_NextAuthUserManyWhereInput
    """Stage to find matching documents in"""
    from: GCMS_Stage = DRAFT
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_NextAuthUserConnection!
  """
  Find many NextAuthUser documents that match criteria in specified stage and unpublish from target stages
  """
  GCMS_unpublishManyNextAuthUsersConnection(
    """Identifies documents in draft stage"""
    where: GCMS_NextAuthUserManyWhereInput
    """Stage to find matching documents in"""
    stage: GCMS_Stage = DRAFT
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    skip: Int
    first: Int
    last: Int
    before: ID
    after: ID
  ): GCMS_NextAuthUserConnection!
  """Update many nextAuthUsers"""
  GCMS_updateManyNextAuthUsers(
    """Documents to apply update on"""
    where: GCMS_NextAuthUserManyWhereInput
    """Updates to document content"""
    data: GCMS_NextAuthUserUpdateManyInput!
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyNextAuthUsersConnection)")
  """Delete many NextAuthUser documents"""
  GCMS_deleteManyNextAuthUsers(
    """Documents to delete"""
    where: GCMS_NextAuthUserManyWhereInput
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyNextAuthUsersConnection)")
  """Publish many NextAuthUser documents"""
  GCMS_publishManyNextAuthUsers(
    """Identifies documents in each stage to be published"""
    where: GCMS_NextAuthUserManyWhereInput
    """Stages to publish documents to"""
    to: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyNextAuthUsersConnection)")
  """Unpublish many NextAuthUser documents"""
  GCMS_unpublishManyNextAuthUsers(
    """Identifies documents in each stage"""
    where: GCMS_NextAuthUserManyWhereInput
    """Stages to unpublish documents from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
  ): GCMS_BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyNextAuthUsersConnection)")
  """Schedule to publish one nextAuthUser"""
  GCMS_schedulePublishNextAuthUser(
    """Document to publish"""
    where: GCMS_NextAuthUserWhereUniqueInput!
    """Publishing target stage"""
    to: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_NextAuthUser
  """
  Unpublish one nextAuthUser from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  GCMS_scheduleUnpublishNextAuthUser(
    """Document to unpublish"""
    where: GCMS_NextAuthUserWhereUniqueInput!
    """Stages to unpublish document from"""
    from: [GCMS_Stage!]! = [PUBLISHED]
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime
    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String
  ): GCMS_NextAuthUser
}

type GCMS_NextAuthUser implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_NextAuthUser!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  name: String
  email: String!
  bio: String
  password: String!
  auth0Id: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  scheduledIn(
    where: GCMS_ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """List of NextAuthUser versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: GCMS_Stage
  ): [GCMS_Version!]!
}

input GCMS_NextAuthUserConnectInput {
  """Document to connect"""
  where: GCMS_NextAuthUserWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_NextAuthUserConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_NextAuthUserEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_NextAuthUserCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  email: String!
  bio: String
  password: String!
  auth0Id: String
}

input GCMS_NextAuthUserCreateManyInlineInput {
  """Create and connect multiple existing NextAuthUser documents"""
  create: [GCMS_NextAuthUserCreateInput!]
  """Connect multiple existing NextAuthUser documents"""
  connect: [GCMS_NextAuthUserWhereUniqueInput!]
}

input GCMS_NextAuthUserCreateOneInlineInput {
  """Create and connect one NextAuthUser document"""
  create: GCMS_NextAuthUserCreateInput
  """Connect one existing NextAuthUser document"""
  connect: GCMS_NextAuthUserWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_NextAuthUserEdge {
  """The item at the end of the edge."""
  node: GCMS_NextAuthUser!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_NextAuthUserManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_NextAuthUserWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_NextAuthUserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_NextAuthUserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  email: String
  """All values that are not equal to given value."""
  email_not: String
  """All values that are contained in given list."""
  email_in: [String!]
  """All values that are not contained in given list."""
  email_not_in: [String!]
  """All values containing the given string."""
  email_contains: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values starting with the given string."""
  email_starts_with: String
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  bio: String
  """All values that are not equal to given value."""
  bio_not: String
  """All values that are contained in given list."""
  bio_in: [String!]
  """All values that are not contained in given list."""
  bio_not_in: [String!]
  """All values containing the given string."""
  bio_contains: String
  """All values not containing the given string."""
  bio_not_contains: String
  """All values starting with the given string."""
  bio_starts_with: String
  """All values not starting with the given string."""
  bio_not_starts_with: String
  """All values ending with the given string."""
  bio_ends_with: String
  """All values not ending with the given string"""
  bio_not_ends_with: String
  password: String
  """All values that are not equal to given value."""
  password_not: String
  """All values that are contained in given list."""
  password_in: [String!]
  """All values that are not contained in given list."""
  password_not_in: [String!]
  """All values containing the given string."""
  password_contains: String
  """All values not containing the given string."""
  password_not_contains: String
  """All values starting with the given string."""
  password_starts_with: String
  """All values not starting with the given string."""
  password_not_starts_with: String
  """All values ending with the given string."""
  password_ends_with: String
  """All values not ending with the given string"""
  password_not_ends_with: String
  auth0Id: String
  """All values that are not equal to given value."""
  auth0Id_not: String
  """All values that are contained in given list."""
  auth0Id_in: [String!]
  """All values that are not contained in given list."""
  auth0Id_not_in: [String!]
  """All values containing the given string."""
  auth0Id_contains: String
  """All values not containing the given string."""
  auth0Id_not_contains: String
  """All values starting with the given string."""
  auth0Id_starts_with: String
  """All values not starting with the given string."""
  auth0Id_not_starts_with: String
  """All values ending with the given string."""
  auth0Id_ends_with: String
  """All values not ending with the given string"""
  auth0Id_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

enum GCMS_NextAuthUserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  bio_ASC
  bio_DESC
  password_ASC
  password_DESC
  auth0Id_ASC
  auth0Id_DESC
}

input GCMS_NextAuthUserUpdateInput {
  name: String
  email: String
  bio: String
  password: String
  auth0Id: String
}

input GCMS_NextAuthUserUpdateManyInlineInput {
  """Create and connect multiple NextAuthUser documents"""
  create: [GCMS_NextAuthUserCreateInput!]
  """Connect multiple existing NextAuthUser documents"""
  connect: [GCMS_NextAuthUserConnectInput!]
  """
  Override currently-connected documents with multiple existing NextAuthUser documents
  """
  set: [GCMS_NextAuthUserWhereUniqueInput!]
  """Update multiple NextAuthUser documents"""
  update: [GCMS_NextAuthUserUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple NextAuthUser documents"""
  upsert: [GCMS_NextAuthUserUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple NextAuthUser documents"""
  disconnect: [GCMS_NextAuthUserWhereUniqueInput!]
  """Delete multiple NextAuthUser documents"""
  delete: [GCMS_NextAuthUserWhereUniqueInput!]
}

input GCMS_NextAuthUserUpdateManyInput {
  name: String
  bio: String
  password: String
}

input GCMS_NextAuthUserUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_NextAuthUserWhereInput!
  """Update many input"""
  data: GCMS_NextAuthUserUpdateManyInput!
}

input GCMS_NextAuthUserUpdateOneInlineInput {
  """Create and connect one NextAuthUser document"""
  create: GCMS_NextAuthUserCreateInput
  """Update single NextAuthUser document"""
  update: GCMS_NextAuthUserUpdateWithNestedWhereUniqueInput
  """Upsert single NextAuthUser document"""
  upsert: GCMS_NextAuthUserUpsertWithNestedWhereUniqueInput
  """Connect existing NextAuthUser document"""
  connect: GCMS_NextAuthUserWhereUniqueInput
  """Disconnect currently connected NextAuthUser document"""
  disconnect: Boolean
  """Delete currently connected NextAuthUser document"""
  delete: Boolean
}

input GCMS_NextAuthUserUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_NextAuthUserWhereUniqueInput!
  """Document to update"""
  data: GCMS_NextAuthUserUpdateInput!
}

input GCMS_NextAuthUserUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_NextAuthUserCreateInput!
  """Update document if it exists"""
  update: GCMS_NextAuthUserUpdateInput!
}

input GCMS_NextAuthUserUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_NextAuthUserWhereUniqueInput!
  """Upsert data"""
  data: GCMS_NextAuthUserUpsertInput!
}

"""Identifies documents"""
input GCMS_NextAuthUserWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_NextAuthUserWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_NextAuthUserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_NextAuthUserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  email: String
  """All values that are not equal to given value."""
  email_not: String
  """All values that are contained in given list."""
  email_in: [String!]
  """All values that are not contained in given list."""
  email_not_in: [String!]
  """All values containing the given string."""
  email_contains: String
  """All values not containing the given string."""
  email_not_contains: String
  """All values starting with the given string."""
  email_starts_with: String
  """All values not starting with the given string."""
  email_not_starts_with: String
  """All values ending with the given string."""
  email_ends_with: String
  """All values not ending with the given string"""
  email_not_ends_with: String
  bio: String
  """All values that are not equal to given value."""
  bio_not: String
  """All values that are contained in given list."""
  bio_in: [String!]
  """All values that are not contained in given list."""
  bio_not_in: [String!]
  """All values containing the given string."""
  bio_contains: String
  """All values not containing the given string."""
  bio_not_contains: String
  """All values starting with the given string."""
  bio_starts_with: String
  """All values not starting with the given string."""
  bio_not_starts_with: String
  """All values ending with the given string."""
  bio_ends_with: String
  """All values not ending with the given string"""
  bio_not_ends_with: String
  password: String
  """All values that are not equal to given value."""
  password_not: String
  """All values that are contained in given list."""
  password_in: [String!]
  """All values that are not contained in given list."""
  password_not_in: [String!]
  """All values containing the given string."""
  password_contains: String
  """All values not containing the given string."""
  password_not_contains: String
  """All values starting with the given string."""
  password_starts_with: String
  """All values not starting with the given string."""
  password_not_starts_with: String
  """All values ending with the given string."""
  password_ends_with: String
  """All values not ending with the given string"""
  password_not_ends_with: String
  auth0Id: String
  """All values that are not equal to given value."""
  auth0Id_not: String
  """All values that are contained in given list."""
  auth0Id_in: [String!]
  """All values that are not contained in given list."""
  auth0Id_not_in: [String!]
  """All values containing the given string."""
  auth0Id_contains: String
  """All values not containing the given string."""
  auth0Id_not_contains: String
  """All values starting with the given string."""
  auth0Id_starts_with: String
  """All values not starting with the given string."""
  auth0Id_not_starts_with: String
  """All values ending with the given string."""
  auth0Id_ends_with: String
  """All values not ending with the given string"""
  auth0Id_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

"""References NextAuthUser record uniquely"""
input GCMS_NextAuthUserWhereUniqueInput {
  id: ID
  email: String
  auth0Id: String
}

"""An object with an ID"""
interface GCMS_Node {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: GCMS_Stage!
}

"""Information about pagination in a connection."""
type GCMS_PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """Number of items in the current page."""
  pageSize: Int
}

type GCMS_Product implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en, de]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [GCMS_Product!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_Product!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: GCMS_SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  name: String!
  slug: String!
  description: String
  price: Int!
  content: GCMS_RichText
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  reviews(
    where: GCMS_ReviewWhereInput
    orderBy: GCMS_ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `reviews` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_Review!]!
  votes(
    where: GCMS_VoteWhereInput
    orderBy: GCMS_VoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `votes` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_Vote!]!
  image(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_Asset
  scheduledIn(
    where: GCMS_ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """List of Product versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: GCMS_Stage
  ): [GCMS_Version!]!
}

input GCMS_ProductConnectInput {
  """Document to connect"""
  where: GCMS_ProductWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_ProductConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_ProductEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_ProductCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """name input for default locale (en)"""
  name: String!
  slug: String!
  description: String
  price: Int!
  content: GCMS_RichTextAST
  reviews: GCMS_ReviewCreateManyInlineInput
  votes: GCMS_VoteCreateManyInlineInput
  image: GCMS_AssetCreateOneInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: GCMS_ProductCreateLocalizationsInput
}

input GCMS_ProductCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
}

input GCMS_ProductCreateLocalizationInput {
  """Localization input"""
  data: GCMS_ProductCreateLocalizationDataInput!
  locale: Locale!
}

input GCMS_ProductCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [GCMS_ProductCreateLocalizationInput!]
}

input GCMS_ProductCreateManyInlineInput {
  """Create and connect multiple existing Product documents"""
  create: [GCMS_ProductCreateInput!]
  """Connect multiple existing Product documents"""
  connect: [GCMS_ProductWhereUniqueInput!]
}

input GCMS_ProductCreateOneInlineInput {
  """Create and connect one Product document"""
  create: GCMS_ProductCreateInput
  """Connect one existing Product document"""
  connect: GCMS_ProductWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_ProductEdge {
  """The item at the end of the edge."""
  node: GCMS_Product!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_ProductManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  slug: String
  """All values that are not equal to given value."""
  slug_not: String
  """All values that are contained in given list."""
  slug_in: [String!]
  """All values that are not contained in given list."""
  slug_not_in: [String!]
  """All values containing the given string."""
  slug_contains: String
  """All values not containing the given string."""
  slug_not_contains: String
  """All values starting with the given string."""
  slug_starts_with: String
  """All values not starting with the given string."""
  slug_not_starts_with: String
  """All values ending with the given string."""
  slug_ends_with: String
  """All values not ending with the given string"""
  slug_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  price: Int
  """All values that are not equal to given value."""
  price_not: Int
  """All values that are contained in given list."""
  price_in: [Int!]
  """All values that are not contained in given list."""
  price_not_in: [Int!]
  """All values less than the given value."""
  price_lt: Int
  """All values less than or equal the given value."""
  price_lte: Int
  """All values greater than the given value."""
  price_gt: Int
  """All values greater than or equal the given value."""
  price_gte: Int
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  reviews_every: GCMS_ReviewWhereInput
  reviews_some: GCMS_ReviewWhereInput
  reviews_none: GCMS_ReviewWhereInput
  votes_every: GCMS_VoteWhereInput
  votes_some: GCMS_VoteWhereInput
  votes_none: GCMS_VoteWhereInput
  image: GCMS_AssetWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

enum GCMS_ProductOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  price_ASC
  price_DESC
}

input GCMS_ProductUpdateInput {
  """name input for default locale (en)"""
  name: String
  slug: String
  description: String
  price: Int
  content: GCMS_RichTextAST
  reviews: GCMS_ReviewUpdateManyInlineInput
  votes: GCMS_VoteUpdateManyInlineInput
  image: GCMS_AssetUpdateOneInlineInput
  """Manage document localizations"""
  localizations: GCMS_ProductUpdateLocalizationsInput
}

input GCMS_ProductUpdateLocalizationDataInput {
  name: String
}

input GCMS_ProductUpdateLocalizationInput {
  data: GCMS_ProductUpdateLocalizationDataInput!
  locale: Locale!
}

input GCMS_ProductUpdateLocalizationsInput {
  """Localizations to create"""
  create: [GCMS_ProductCreateLocalizationInput!]
  """Localizations to update"""
  update: [GCMS_ProductUpdateLocalizationInput!]
  upsert: [GCMS_ProductUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input GCMS_ProductUpdateManyInlineInput {
  """Create and connect multiple Product documents"""
  create: [GCMS_ProductCreateInput!]
  """Connect multiple existing Product documents"""
  connect: [GCMS_ProductConnectInput!]
  """
  Override currently-connected documents with multiple existing Product documents
  """
  set: [GCMS_ProductWhereUniqueInput!]
  """Update multiple Product documents"""
  update: [GCMS_ProductUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Product documents"""
  upsert: [GCMS_ProductUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Product documents"""
  disconnect: [GCMS_ProductWhereUniqueInput!]
  """Delete multiple Product documents"""
  delete: [GCMS_ProductWhereUniqueInput!]
}

input GCMS_ProductUpdateManyInput {
  """name input for default locale (en)"""
  name: String
  description: String
  price: Int
  content: GCMS_RichTextAST
  """Optional updates to localizations"""
  localizations: GCMS_ProductUpdateManyLocalizationsInput
}

input GCMS_ProductUpdateManyLocalizationDataInput {
  name: String
}

input GCMS_ProductUpdateManyLocalizationInput {
  data: GCMS_ProductUpdateManyLocalizationDataInput!
  locale: Locale!
}

input GCMS_ProductUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [GCMS_ProductUpdateManyLocalizationInput!]
}

input GCMS_ProductUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_ProductWhereInput!
  """Update many input"""
  data: GCMS_ProductUpdateManyInput!
}

input GCMS_ProductUpdateOneInlineInput {
  """Create and connect one Product document"""
  create: GCMS_ProductCreateInput
  """Update single Product document"""
  update: GCMS_ProductUpdateWithNestedWhereUniqueInput
  """Upsert single Product document"""
  upsert: GCMS_ProductUpsertWithNestedWhereUniqueInput
  """Connect existing Product document"""
  connect: GCMS_ProductWhereUniqueInput
  """Disconnect currently connected Product document"""
  disconnect: Boolean
  """Delete currently connected Product document"""
  delete: Boolean
}

input GCMS_ProductUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ProductWhereUniqueInput!
  """Document to update"""
  data: GCMS_ProductUpdateInput!
}

input GCMS_ProductUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_ProductCreateInput!
  """Update document if it exists"""
  update: GCMS_ProductUpdateInput!
}

input GCMS_ProductUpsertLocalizationInput {
  update: GCMS_ProductUpdateLocalizationDataInput!
  create: GCMS_ProductCreateLocalizationDataInput!
  locale: Locale!
}

input GCMS_ProductUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ProductWhereUniqueInput!
  """Upsert data"""
  data: GCMS_ProductUpsertInput!
}

"""Identifies documents"""
input GCMS_ProductWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  slug: String
  """All values that are not equal to given value."""
  slug_not: String
  """All values that are contained in given list."""
  slug_in: [String!]
  """All values that are not contained in given list."""
  slug_not_in: [String!]
  """All values containing the given string."""
  slug_contains: String
  """All values not containing the given string."""
  slug_not_contains: String
  """All values starting with the given string."""
  slug_starts_with: String
  """All values not starting with the given string."""
  slug_not_starts_with: String
  """All values ending with the given string."""
  slug_ends_with: String
  """All values not ending with the given string"""
  slug_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  price: Int
  """All values that are not equal to given value."""
  price_not: Int
  """All values that are contained in given list."""
  price_in: [Int!]
  """All values that are not contained in given list."""
  price_not_in: [Int!]
  """All values less than the given value."""
  price_lt: Int
  """All values less than or equal the given value."""
  price_lte: Int
  """All values greater than the given value."""
  price_gt: Int
  """All values greater than or equal the given value."""
  price_gte: Int
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  reviews_every: GCMS_ReviewWhereInput
  reviews_some: GCMS_ReviewWhereInput
  reviews_none: GCMS_ReviewWhereInput
  votes_every: GCMS_VoteWhereInput
  votes_some: GCMS_VoteWhereInput
  votes_none: GCMS_VoteWhereInput
  image: GCMS_AssetWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

"""References Product record uniquely"""
input GCMS_ProductWhereUniqueInput {
  id: ID
  slug: String
}

input GCMS_PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!
  """Stages to publish selected locales to"""
  stages: [GCMS_Stage!]!
}

type Query {
  """Fetches an object given its ID"""
  GCMS_node(
    """The ID of an object"""
    id: ID!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_Node
  """Retrieve multiple products"""
  GCMS_products(
    where: GCMS_ProductWhereInput
    orderBy: GCMS_ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_Product!]!
  """Retrieve a single product"""
  GCMS_product(
    where: GCMS_ProductWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_Product
  """Retrieve multiple products using the Relay connection interface"""
  GCMS_productsConnection(
    where: GCMS_ProductWhereInput
    orderBy: GCMS_ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ProductConnection!
  """Retrieve document version"""
  GCMS_productVersion(where: GCMS_VersionWhereInput!): GCMS_DocumentVersion
  """Retrieve multiple reviews"""
  GCMS_reviews(
    where: GCMS_ReviewWhereInput
    orderBy: GCMS_ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_Review!]!
  """Retrieve a single review"""
  GCMS_review(
    where: GCMS_ReviewWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_Review
  """Retrieve multiple reviews using the Relay connection interface"""
  GCMS_reviewsConnection(
    where: GCMS_ReviewWhereInput
    orderBy: GCMS_ReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Review` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ReviewConnection!
  """Retrieve document version"""
  GCMS_reviewVersion(where: GCMS_VersionWhereInput!): GCMS_DocumentVersion
  """Retrieve multiple assets"""
  GCMS_assets(
    where: GCMS_AssetWhereInput
    orderBy: GCMS_AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_Asset!]!
  """Retrieve a single asset"""
  GCMS_asset(
    where: GCMS_AssetWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_Asset
  """Retrieve multiple assets using the Relay connection interface"""
  GCMS_assetsConnection(
    where: GCMS_AssetWhereInput
    orderBy: GCMS_AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_AssetConnection!
  """Retrieve document version"""
  GCMS_assetVersion(where: GCMS_VersionWhereInput!): GCMS_DocumentVersion
  """Retrieve multiple votes"""
  GCMS_votes(
    where: GCMS_VoteWhereInput
    orderBy: GCMS_VoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Vote` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_Vote!]!
  """Retrieve a single vote"""
  GCMS_vote(
    where: GCMS_VoteWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Vote` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_Vote
  """Retrieve multiple votes using the Relay connection interface"""
  GCMS_votesConnection(
    where: GCMS_VoteWhereInput
    orderBy: GCMS_VoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Vote` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_VoteConnection!
  """Retrieve document version"""
  GCMS_voteVersion(where: GCMS_VersionWhereInput!): GCMS_DocumentVersion
  """Retrieve multiple users"""
  GCMS_users(
    where: GCMS_UserWhereInput
    orderBy: GCMS_UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_User!]!
  """Retrieve a single user"""
  GCMS_user(
    where: GCMS_UserWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_User
  """Retrieve multiple users using the Relay connection interface"""
  GCMS_usersConnection(
    where: GCMS_UserWhereInput
    orderBy: GCMS_UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_UserConnection!
  """Retrieve multiple scheduledOperations"""
  GCMS_scheduledOperations(
    where: GCMS_ScheduledOperationWhereInput
    orderBy: GCMS_ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_ScheduledOperation!]!
  """Retrieve a single scheduledOperation"""
  GCMS_scheduledOperation(
    where: GCMS_ScheduledOperationWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ScheduledOperation
  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  GCMS_scheduledOperationsConnection(
    where: GCMS_ScheduledOperationWhereInput
    orderBy: GCMS_ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ScheduledOperationConnection!
  """Retrieve multiple scheduledReleases"""
  GCMS_scheduledReleases(
    where: GCMS_ScheduledReleaseWhereInput
    orderBy: GCMS_ScheduledReleaseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_ScheduledRelease!]!
  """Retrieve a single scheduledRelease"""
  GCMS_scheduledRelease(
    where: GCMS_ScheduledReleaseWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ScheduledRelease
  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  GCMS_scheduledReleasesConnection(
    where: GCMS_ScheduledReleaseWhereInput
    orderBy: GCMS_ScheduledReleaseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_ScheduledReleaseConnection!
  """Retrieve multiple nextAuthUsers"""
  GCMS_nextAuthUsers(
    where: GCMS_NextAuthUserWhereInput
    orderBy: GCMS_NextAuthUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `NextAuthUser` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [GCMS_NextAuthUser!]!
  """Retrieve a single nextAuthUser"""
  GCMS_nextAuthUser(
    where: GCMS_NextAuthUserWhereUniqueInput!
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `NextAuthUser` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_NextAuthUser
  """Retrieve multiple nextAuthUsers using the Relay connection interface"""
  GCMS_nextAuthUsersConnection(
    where: GCMS_NextAuthUserWhereInput
    orderBy: GCMS_NextAuthUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: GCMS_Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `NextAuthUser` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): GCMS_NextAuthUserConnection!
  """Retrieve document version"""
  GCMS_nextAuthUserVersion(where: GCMS_VersionWhereInput!): GCMS_DocumentVersion
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  r: GCMS_RGBAHue!
  g: GCMS_RGBAHue!
  b: GCMS_RGBAHue!
  a: GCMS_RGBATransparency!
}

scalar GCMS_RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input GCMS_RGBAInput {
  r: GCMS_RGBAHue!
  g: GCMS_RGBAHue!
  b: GCMS_RGBAHue!
  a: GCMS_RGBATransparency!
}

scalar GCMS_RGBATransparency

type GCMS_Review implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_Review!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  name: String
  comment: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  product(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_Product
  scheduledIn(
    where: GCMS_ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """List of Review versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: GCMS_Stage
  ): [GCMS_Version!]!
}

input GCMS_ReviewConnectInput {
  """Document to connect"""
  where: GCMS_ReviewWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_ReviewConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_ReviewEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_ReviewCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  comment: String!
  product: GCMS_ProductCreateOneInlineInput
}

input GCMS_ReviewCreateManyInlineInput {
  """Create and connect multiple existing Review documents"""
  create: [GCMS_ReviewCreateInput!]
  """Connect multiple existing Review documents"""
  connect: [GCMS_ReviewWhereUniqueInput!]
}

input GCMS_ReviewCreateOneInlineInput {
  """Create and connect one Review document"""
  create: GCMS_ReviewCreateInput
  """Connect one existing Review document"""
  connect: GCMS_ReviewWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_ReviewEdge {
  """The item at the end of the edge."""
  node: GCMS_Review!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_ReviewManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ReviewWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ReviewWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ReviewWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  comment: String
  """All values that are not equal to given value."""
  comment_not: String
  """All values that are contained in given list."""
  comment_in: [String!]
  """All values that are not contained in given list."""
  comment_not_in: [String!]
  """All values containing the given string."""
  comment_contains: String
  """All values not containing the given string."""
  comment_not_contains: String
  """All values starting with the given string."""
  comment_starts_with: String
  """All values not starting with the given string."""
  comment_not_starts_with: String
  """All values ending with the given string."""
  comment_ends_with: String
  """All values not ending with the given string"""
  comment_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  product: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

enum GCMS_ReviewOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  comment_ASC
  comment_DESC
}

input GCMS_ReviewUpdateInput {
  name: String
  comment: String
  product: GCMS_ProductUpdateOneInlineInput
}

input GCMS_ReviewUpdateManyInlineInput {
  """Create and connect multiple Review documents"""
  create: [GCMS_ReviewCreateInput!]
  """Connect multiple existing Review documents"""
  connect: [GCMS_ReviewConnectInput!]
  """
  Override currently-connected documents with multiple existing Review documents
  """
  set: [GCMS_ReviewWhereUniqueInput!]
  """Update multiple Review documents"""
  update: [GCMS_ReviewUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Review documents"""
  upsert: [GCMS_ReviewUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Review documents"""
  disconnect: [GCMS_ReviewWhereUniqueInput!]
  """Delete multiple Review documents"""
  delete: [GCMS_ReviewWhereUniqueInput!]
}

input GCMS_ReviewUpdateManyInput {
  name: String
  comment: String
}

input GCMS_ReviewUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_ReviewWhereInput!
  """Update many input"""
  data: GCMS_ReviewUpdateManyInput!
}

input GCMS_ReviewUpdateOneInlineInput {
  """Create and connect one Review document"""
  create: GCMS_ReviewCreateInput
  """Update single Review document"""
  update: GCMS_ReviewUpdateWithNestedWhereUniqueInput
  """Upsert single Review document"""
  upsert: GCMS_ReviewUpsertWithNestedWhereUniqueInput
  """Connect existing Review document"""
  connect: GCMS_ReviewWhereUniqueInput
  """Disconnect currently connected Review document"""
  disconnect: Boolean
  """Delete currently connected Review document"""
  delete: Boolean
}

input GCMS_ReviewUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ReviewWhereUniqueInput!
  """Document to update"""
  data: GCMS_ReviewUpdateInput!
}

input GCMS_ReviewUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_ReviewCreateInput!
  """Update document if it exists"""
  update: GCMS_ReviewUpdateInput!
}

input GCMS_ReviewUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ReviewWhereUniqueInput!
  """Upsert data"""
  data: GCMS_ReviewUpsertInput!
}

"""Identifies documents"""
input GCMS_ReviewWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ReviewWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ReviewWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ReviewWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  comment: String
  """All values that are not equal to given value."""
  comment_not: String
  """All values that are contained in given list."""
  comment_in: [String!]
  """All values that are not contained in given list."""
  comment_not_in: [String!]
  """All values containing the given string."""
  comment_contains: String
  """All values not containing the given string."""
  comment_not_contains: String
  """All values starting with the given string."""
  comment_starts_with: String
  """All values not starting with the given string."""
  comment_not_starts_with: String
  """All values ending with the given string."""
  comment_ends_with: String
  """All values not ending with the given string"""
  comment_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  product: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

"""References Review record uniquely"""
input GCMS_ReviewWhereUniqueInput {
  id: ID
}

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type GCMS_RichText {
  """Returns AST representation"""
  raw: GCMS_RichTextAST!
  """Returns HTMl representation"""
  html: String!
  """Returns Markdown representation"""
  markdown: String!
  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar GCMS_RichTextAST

"""Scheduled Operation system model"""
type GCMS_ScheduledOperation implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_ScheduledOperation!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """Operation description"""
  description: String
  """Operation error message"""
  errorMessage: String
  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: GCMS_Json!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """The release this operation is scheduled for"""
  release(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_ScheduledRelease
  """operation Status"""
  status: GCMS_ScheduledOperationStatus!
  affectedDocuments(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperationAffectedDocument!]!
}

union GCMS_ScheduledOperationAffectedDocument = GCMS_Asset | GCMS_NextAuthUser | GCMS_Product | GCMS_Review | GCMS_Vote

input GCMS_ScheduledOperationConnectInput {
  """Document to connect"""
  where: GCMS_ScheduledOperationWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_ScheduledOperationConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_ScheduledOperationEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [GCMS_ScheduledOperationWhereUniqueInput!]
}

input GCMS_ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: GCMS_ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_ScheduledOperationEdge {
  """The item at the end of the edge."""
  node: GCMS_ScheduledOperation!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_ScheduledOperationManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ScheduledOperationWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  release: GCMS_ScheduledReleaseWhereInput
  status: GCMS_ScheduledOperationStatus
  """All values that are not equal to given value."""
  status_not: GCMS_ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [GCMS_ScheduledOperationStatus!]
  """All values that are not contained in given list."""
  status_not_in: [GCMS_ScheduledOperationStatus!]
}

enum GCMS_ScheduledOperationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  status_ASC
  status_DESC
}

"""System Scheduled Operation Status"""
enum GCMS_ScheduledOperationStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELED
}

input GCMS_ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [GCMS_ScheduledOperationConnectInput!]
  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [GCMS_ScheduledOperationWhereUniqueInput!]
  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [GCMS_ScheduledOperationWhereUniqueInput!]
}

input GCMS_ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: GCMS_ScheduledOperationWhereUniqueInput
  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input GCMS_ScheduledOperationWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ScheduledOperationWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  release: GCMS_ScheduledReleaseWhereInput
  status: GCMS_ScheduledOperationStatus
  """All values that are not equal to given value."""
  status_not: GCMS_ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [GCMS_ScheduledOperationStatus!]
  """All values that are not contained in given list."""
  status_not_in: [GCMS_ScheduledOperationStatus!]
}

"""References ScheduledOperation record uniquely"""
input GCMS_ScheduledOperationWhereUniqueInput {
  id: ID
}

"""Scheduled Release system model"""
type GCMS_ScheduledRelease implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_ScheduledRelease!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """Release Title"""
  title: String
  """Release description"""
  description: String
  """Release error message"""
  errorMessage: String
  """Whether scheduled release should be run"""
  isActive: Boolean!
  """Whether scheduled release is implicit"""
  isImplicit: Boolean!
  """Release date and time"""
  releaseAt: DateTime
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """Operations to run with this release"""
  operations(
    where: GCMS_ScheduledOperationWhereInput
    orderBy: GCMS_ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """Release Status"""
  status: GCMS_ScheduledReleaseStatus!
}

input GCMS_ScheduledReleaseConnectInput {
  """Document to connect"""
  where: GCMS_ScheduledReleaseWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_ScheduledReleaseConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_ScheduledReleaseEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_ScheduledReleaseCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
}

input GCMS_ScheduledReleaseCreateManyInlineInput {
  """Create and connect multiple existing ScheduledRelease documents"""
  create: [GCMS_ScheduledReleaseCreateInput!]
  """Connect multiple existing ScheduledRelease documents"""
  connect: [GCMS_ScheduledReleaseWhereUniqueInput!]
}

input GCMS_ScheduledReleaseCreateOneInlineInput {
  """Create and connect one ScheduledRelease document"""
  create: GCMS_ScheduledReleaseCreateInput
  """Connect one existing ScheduledRelease document"""
  connect: GCMS_ScheduledReleaseWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_ScheduledReleaseEdge {
  """The item at the end of the edge."""
  node: GCMS_ScheduledRelease!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_ScheduledReleaseManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ScheduledReleaseWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  releaseAt: DateTime
  """All values that are not equal to given value."""
  releaseAt_not: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  operations_every: GCMS_ScheduledOperationWhereInput
  operations_some: GCMS_ScheduledOperationWhereInput
  operations_none: GCMS_ScheduledOperationWhereInput
  status: GCMS_ScheduledReleaseStatus
  """All values that are not equal to given value."""
  status_not: GCMS_ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [GCMS_ScheduledReleaseStatus!]
  """All values that are not contained in given list."""
  status_not_in: [GCMS_ScheduledReleaseStatus!]
}

enum GCMS_ScheduledReleaseOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
}

"""System Scheduled Release Status"""
enum GCMS_ScheduledReleaseStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

input GCMS_ScheduledReleaseUpdateInput {
  title: String
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
}

input GCMS_ScheduledReleaseUpdateManyInlineInput {
  """Create and connect multiple ScheduledRelease documents"""
  create: [GCMS_ScheduledReleaseCreateInput!]
  """Connect multiple existing ScheduledRelease documents"""
  connect: [GCMS_ScheduledReleaseConnectInput!]
  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [GCMS_ScheduledReleaseWhereUniqueInput!]
  """Update multiple ScheduledRelease documents"""
  update: [GCMS_ScheduledReleaseUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ScheduledRelease documents"""
  upsert: [GCMS_ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [GCMS_ScheduledReleaseWhereUniqueInput!]
  """Delete multiple ScheduledRelease documents"""
  delete: [GCMS_ScheduledReleaseWhereUniqueInput!]
}

input GCMS_ScheduledReleaseUpdateManyInput {
  title: String
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
}

input GCMS_ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_ScheduledReleaseWhereInput!
  """Update many input"""
  data: GCMS_ScheduledReleaseUpdateManyInput!
}

input GCMS_ScheduledReleaseUpdateOneInlineInput {
  """Create and connect one ScheduledRelease document"""
  create: GCMS_ScheduledReleaseCreateInput
  """Update single ScheduledRelease document"""
  update: GCMS_ScheduledReleaseUpdateWithNestedWhereUniqueInput
  """Upsert single ScheduledRelease document"""
  upsert: GCMS_ScheduledReleaseUpsertWithNestedWhereUniqueInput
  """Connect existing ScheduledRelease document"""
  connect: GCMS_ScheduledReleaseWhereUniqueInput
  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean
  """Delete currently connected ScheduledRelease document"""
  delete: Boolean
}

input GCMS_ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ScheduledReleaseWhereUniqueInput!
  """Document to update"""
  data: GCMS_ScheduledReleaseUpdateInput!
}

input GCMS_ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_ScheduledReleaseCreateInput!
  """Update document if it exists"""
  update: GCMS_ScheduledReleaseUpdateInput!
}

input GCMS_ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_ScheduledReleaseWhereUniqueInput!
  """Upsert data"""
  data: GCMS_ScheduledReleaseUpsertInput!
}

"""Identifies documents"""
input GCMS_ScheduledReleaseWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_ScheduledReleaseWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  releaseAt: DateTime
  """All values that are not equal to given value."""
  releaseAt_not: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  operations_every: GCMS_ScheduledOperationWhereInput
  operations_some: GCMS_ScheduledOperationWhereInput
  operations_none: GCMS_ScheduledOperationWhereInput
  status: GCMS_ScheduledReleaseStatus
  """All values that are not equal to given value."""
  status_not: GCMS_ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [GCMS_ScheduledReleaseStatus!]
  """All values that are not contained in given list."""
  status_not_in: [GCMS_ScheduledReleaseStatus!]
}

"""References ScheduledRelease record uniquely"""
input GCMS_ScheduledReleaseWhereUniqueInput {
  id: ID
}

"""Stage system enumeration"""
enum GCMS_Stage {
  """The Draft is the default stage for all your content."""
  DRAFT
  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum GCMS_SystemDateTimeFieldVariation {
  BASE
  LOCALIZATION
  COMBINED
}

input GCMS_UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!
  """Stages to unpublish selected locales from"""
  stages: [GCMS_Stage!]!
}

"""User system model"""
type GCMS_User implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_User!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """The username"""
  name: String!
  """Profile Picture url"""
  picture: String
  """Flag to determine if user is active or not"""
  isActive: Boolean!
  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: GCMS_UserKind!
}

input GCMS_UserConnectInput {
  """Document to connect"""
  where: GCMS_UserWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_UserConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_UserEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [GCMS_UserWhereUniqueInput!]
}

input GCMS_UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: GCMS_UserWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_UserEdge {
  """The item at the end of the edge."""
  node: GCMS_User!
  """A cursor for use in pagination."""
  cursor: String!
}

"""System User Kind"""
enum GCMS_UserKind {
  PAT
  MEMBER
  WEBHOOK
  PUBLIC
}

"""Identifies documents"""
input GCMS_UserManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: GCMS_UserKind
  """All values that are not equal to given value."""
  kind_not: GCMS_UserKind
  """All values that are contained in given list."""
  kind_in: [GCMS_UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [GCMS_UserKind!]
}

enum GCMS_UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
}

input GCMS_UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [GCMS_UserConnectInput!]
  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [GCMS_UserWhereUniqueInput!]
  """Disconnect multiple User documents"""
  disconnect: [GCMS_UserWhereUniqueInput!]
}

input GCMS_UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: GCMS_UserWhereUniqueInput
  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""Identifies documents"""
input GCMS_UserWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: GCMS_UserKind
  """All values that are not equal to given value."""
  kind_not: GCMS_UserKind
  """All values that are contained in given list."""
  kind_in: [GCMS_UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [GCMS_UserKind!]
}

"""References User record uniquely"""
input GCMS_UserWhereUniqueInput {
  id: ID
}

type GCMS_Version {
  id: ID!
  stage: GCMS_Stage!
  revision: Int!
  createdAt: DateTime!
}

input GCMS_VersionWhereInput {
  id: ID!
  stage: GCMS_Stage!
  revision: Int!
}

type GCMS_Vote implements GCMS_Node {
  """System stage field"""
  stage: GCMS_Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [GCMS_Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [GCMS_Vote!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_User
  product(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `product` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): GCMS_Product
  scheduledIn(
    where: GCMS_ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [GCMS_ScheduledOperation!]!
  """List of Vote versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: GCMS_Stage
  ): [GCMS_Version!]!
}

input GCMS_VoteConnectInput {
  """Document to connect"""
  where: GCMS_VoteWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: GCMS_ConnectPositionInput
}

"""A connection to a list of items."""
type GCMS_VoteConnection {
  """Information to aid in pagination."""
  pageInfo: GCMS_PageInfo!
  """A list of edges."""
  edges: [GCMS_VoteEdge!]!
  aggregate: GCMS_Aggregate!
}

input GCMS_VoteCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  product: GCMS_ProductCreateOneInlineInput
}

input GCMS_VoteCreateManyInlineInput {
  """Create and connect multiple existing Vote documents"""
  create: [GCMS_VoteCreateInput!]
  """Connect multiple existing Vote documents"""
  connect: [GCMS_VoteWhereUniqueInput!]
}

input GCMS_VoteCreateOneInlineInput {
  """Create and connect one Vote document"""
  create: GCMS_VoteCreateInput
  """Connect one existing Vote document"""
  connect: GCMS_VoteWhereUniqueInput
}

"""An edge in a connection."""
type GCMS_VoteEdge {
  """The item at the end of the edge."""
  node: GCMS_Vote!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input GCMS_VoteManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_VoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_VoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_VoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  product: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

enum GCMS_VoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
}

input GCMS_VoteUpdateInput {
  product: GCMS_ProductUpdateOneInlineInput
}

input GCMS_VoteUpdateManyInlineInput {
  """Create and connect multiple Vote documents"""
  create: [GCMS_VoteCreateInput!]
  """Connect multiple existing Vote documents"""
  connect: [GCMS_VoteConnectInput!]
  """
  Override currently-connected documents with multiple existing Vote documents
  """
  set: [GCMS_VoteWhereUniqueInput!]
  """Update multiple Vote documents"""
  update: [GCMS_VoteUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Vote documents"""
  upsert: [GCMS_VoteUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Vote documents"""
  disconnect: [GCMS_VoteWhereUniqueInput!]
  """Delete multiple Vote documents"""
  delete: [GCMS_VoteWhereUniqueInput!]
}

input GCMS_VoteUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input GCMS_VoteUpdateManyWithNestedWhereInput {
  """Document search"""
  where: GCMS_VoteWhereInput!
  """Update many input"""
  data: GCMS_VoteUpdateManyInput!
}

input GCMS_VoteUpdateOneInlineInput {
  """Create and connect one Vote document"""
  create: GCMS_VoteCreateInput
  """Update single Vote document"""
  update: GCMS_VoteUpdateWithNestedWhereUniqueInput
  """Upsert single Vote document"""
  upsert: GCMS_VoteUpsertWithNestedWhereUniqueInput
  """Connect existing Vote document"""
  connect: GCMS_VoteWhereUniqueInput
  """Disconnect currently connected Vote document"""
  disconnect: Boolean
  """Delete currently connected Vote document"""
  delete: Boolean
}

input GCMS_VoteUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_VoteWhereUniqueInput!
  """Document to update"""
  data: GCMS_VoteUpdateInput!
}

input GCMS_VoteUpsertInput {
  """Create document if it didn't exist"""
  create: GCMS_VoteCreateInput!
  """Update document if it exists"""
  update: GCMS_VoteUpdateInput!
}

input GCMS_VoteUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: GCMS_VoteWhereUniqueInput!
  """Upsert data"""
  data: GCMS_VoteUpsertInput!
}

"""Identifies documents"""
input GCMS_VoteWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [GCMS_VoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [GCMS_VoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [GCMS_VoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: GCMS_UserWhereInput
  updatedBy: GCMS_UserWhereInput
  publishedBy: GCMS_UserWhereInput
  product: GCMS_ProductWhereInput
  scheduledIn_every: GCMS_ScheduledOperationWhereInput
  scheduledIn_some: GCMS_ScheduledOperationWhereInput
  scheduledIn_none: GCMS_ScheduledOperationWhereInput
}

"""References Vote record uniquely"""
input GCMS_VoteWhereUniqueInput {
  id: ID
}

enum GCMS__FilterKind {
  search
  AND
  OR
  NOT
  eq
  eq_not
  in
  not_in
  lt
  lte
  gt
  gte
  contains
  not_contains
  starts_with
  not_starts_with
  ends_with
  not_ends_with
  contains_all
  contains_some
  contains_none
  relational_single
  relational_every
  relational_some
  relational_none
}

enum GCMS__MutationInputFieldKind {
  scalar
  richText
  richTextWithEmbeds
  enum
  relation
  union
  virtual
}

enum GCMS__MutationKind {
  create
  publish
  unpublish
  update
  upsert
  delete
  updateMany
  publishMany
  unpublishMany
  deleteMany
  schedulePublish
  scheduleUnpublish
}

enum GCMS__OrderDirection {
  asc
  desc
}

enum GCMS__RelationInputCardinality {
  one
  many
}

enum GCMS__RelationInputKind {
  create
  update
}

enum GCMS__RelationKind {
  regular
  union
}

enum GCMS__SystemDateTimeFieldVariation {
  base
  localization
  combined
}